generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native","rhel-openssl-1.0.x"]
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

enum UserRole {
    ADMIN
    USER
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  expires_in        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  role         UserRole  @default(USER)
  subscriptionId String? @default("cldf0dhas0000d2ld6q3pifi4")
  sentEnterprise Boolean @default(false)
  subscription Subscription? @relation(fields: [subscriptionId], references: [id])
  sentEmail Boolean @default(false)
  belongsToAmazon AmazonProduct[]
  belongsToAsia AsiaProduct[]
  createdAt DateTime @default(now())
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}


enum ProductTag {
    Unique
    Trending_Category
    Asia_Top_Seller
    Deqa_Top_Rank
    No_Competition
    Sales_Trending
    High_Volume_Sales
    Improvement_Opportunity
}

model AmazonProduct {
    id                   String      @id() @default(cuid())
    ASIN                 String @unique
    url                  String @db.VarChar(1000)
    img                  String @db.VarChar(1000)
    title                String      @db.VarChar(1000)
    category             String
    sub_category         String
    price                Float
    monthly_sales        Int
    monthly_revenue     Float @default(0)
    reviews              Int
    rating               Float
    revenue_subcategory  Float
    date_first_available String
    deqa_score           Int
    roi_score            Float
    tag                  ProductTag?
    sellMin Float @default(0)
    sellMax Float @default(0)
    sales_growth_1       Float
    sales_growth_2       Float
    sales_growth_3       Float
    pos_count            Int? @default(-1)
    neg_count            Int? @default(-1)
    neut_count           Int? @default(-1)
    search_volume        SearchVolume[]
    belongsToId          String?
    belongsTo            User? @relation(fields: [belongsToId], references: [id])
    isFake Boolean @default(false)
}

model SearchVolume {
  id                  String      @id() @default(cuid())
  monthly_sales Int
  volume Int
  phrase String   
  products              AmazonProduct[]
  asia_products              AsiaProduct[]
}

model AsiaProduct {
    id                   String      @id() @default(cuid())
    ASIN                 String 
    url                  String @db.VarChar(1000)
    img                  String @db.VarChar(1000)
    chinese_title        String      @db.VarChar(1000)
    english_title        String      @db.VarChar(1000)
    category             String
    sub_category         String
    price                Float
    monthly_sales        Int
    monthly_revenue      Float @default(0)
    sellMin Float @default(0)
    sellMax Float @default(0)
    rating               Float
    revenue_subcategory  Float
    deqa_score           Int
    roi_score            Float
    tag                  ProductTag?
    subcategory_growth_1 Float
    subcategory_growth_2 Float
    subcategory_growth_3 Float
    sales_growth_1       Int @default(0)
    sales_growth_2       Int @default(0)
    sales_growth_3       Int @default(0)
    search_volume        SearchVolume[]
    video String? @db.VarChar(2000)
    competitors Competitor[]
    belongsToId          String?
    belongsTo            User? @relation(fields: [belongsToId], references: [id])
    isFake Boolean @default(false)
}

enum SubType {
    Monthly
    Yearly
}
model Subscription {
    id          String  @id @default(cuid())
    title String
    description String
    price Float?
    type SubType
    level Int @default(1)
    users User[]
    sPrice String? @default("")
    sPriceDev String? @default("")
    isPopular Boolean @default(false)
}


model Competitor {
 id String @id @default(cuid())
 link String @db.VarChar(2000)
 title String @db.VarChar(1000)
 revenue Float
 products AsiaProduct[]
}

model ChatResponse {
    id String @id @default(cuid())
    response String @db.VarChar(1000)
    asin String @unique
    reviewsUrl String
}